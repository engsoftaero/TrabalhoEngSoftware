@using EngSoftwareForum.Utility
@using System.IO
@using Microsoft.AspNetCore.Hosting;
@model EngSoftwareForum.Models.CommonViewModel

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<br />
<h2 class="text-info">Question Details</h2>
<br />

<form method="post" asp-action="Details">
    <div class="border backgroudWhite">
        <b><i>Question Title: &nbsp;</i></b><br />
        <div class="form-group row">
            <div class="formulario">
                <input asp-for="Questions.Title" readonly class="form-control" />
            </div>
            <span asp-validation-for="Questions.Title" class="text-danger"></span>
        </div>

        <div class="form-group row">
            <b><i>&nbsp; &nbsp; Asked by: &nbsp;</i></b>
            @Html.Raw(Model.Questions.UserID)
        </div>


        @{
            string user_pic1 = Model.Questions.UserKey + ".png"; //pega a imagem do usuario que postou a resposta

            string path1 = "wwwroot\\Images\\" + user_pic1;

            string wanted_path1 = System.AppDomain.CurrentDomain.BaseDirectory;
            var array1 = wanted_path1.Split(new string[] { "bin" }, // lista de separadores complexos
            StringSplitOptions.RemoveEmptyEntries);

            wanted_path1 = array1[0] + path1;
        }



        @if (System.IO.File.Exists(wanted_path1))
        {
            <img src="~/Images/@user_pic1" width="100" height="100" class="alignleft" /><br /><br /><br /><br /><br />
        }
        else
        {
            <img src="~/Images/User_icon_BLACK-01.png" width="100" height="100" class="alignleft" /><br /><br /><br /><br /><br />
        }



        <b><i>Question: &nbsp;</i></b><br />
        <div class="form-group row">
            <div class="formulario">
                <textarea id="msg" rows="20" cols="100" maxlength="3000" readonly asp-for="Questions.Question"></textarea>
            </div>
            <span asp-validation-for="Questions.Question" class="text-danger"></span>
        </div>





        <div class="btn-group" role="group">
            <a class="btn btn-success text-white" asp-action="UpvoteQuestion" asp-route-Id="@Model.Questions.Id">
                <i class="fas fa-arrow-circle-up"></i>
            </a>
        </div>

        @Html.Raw(Model.Questions.VoteGQ)

        <div class="btn-group" role="group">
            <a class="btn btn-danger text-white" asp-action="DownvoteQuestion" asp-route-Id="@Model.Questions.Id">
                <i class="fas fa-arrow-circle-down"></i>
            </a>

        </div>


        <br />

        @try
        {
            if (Model.Questions.UsersDownVoteQ.Contains(Model.ApplicationUser.Name))
            {
                @Html.Raw("Your vote: Negative.")
            }
            else if (Model.Questions.UsersUpVoteQ.Contains(Model.ApplicationUser.Name))
            {
                @Html.Raw("Your vote: Positive.")
            }
            else
            {
                @Html.Raw("You didn't vote yet.")
            }
        }
        catch
        {
            try
            {
                if (Model.Questions.UsersUpVoteQ.Contains(Model.ApplicationUser.Name))
                {
                    @Html.Raw("Your vote: Positive.")
                }
                else
                {
                    @Html.Raw("You didn't vote yet.")
                }
            }
            catch
            {
                @Html.Raw("You didn't vote yet.")
            }
        }


        <br><br />

        <div class="alignright2">
            <partial name="_AnswerAndBackToListButton" model="Model.Questions.Id" />
        </div>

        <br><br />

        <div>
            @{
                var viewBagVariavel = ViewBag.Replies;
                string Replies = "Replies:";

                <table class="table table-striped border">
                    <tr class="table-secondary">
                        <th>
                            @Html.DisplayNameFor(m => Replies)
                        </th>
                        <th></th>
                        <th></th>
                    </tr>
                    @for (int i = 0; i < viewBagVariavel.Count; i++)
                    {
                        @if (viewBagVariavel[i].QuestionID == Model.Questions.Id)
                        {
                            string mostra = viewBagVariavel[i].ReplyString;
                            string mostra2 = mostra.Replace("\n", "<br/>");
                            string mostra3 = mostra2.Replace(" ", "&nbsp");
                            int ReplyID = viewBagVariavel[i].ReplyId;


                            string user_pic = viewBagVariavel[i].UserKey + ".png"; //pega a imagem do usuario que postou a resposta

                            string path = "wwwroot\\Images\\" + user_pic;

                            string wanted_path = System.AppDomain.CurrentDomain.BaseDirectory;
                            var array = wanted_path.Split(new string[] { "bin" }, // lista de separadores complexos
                            StringSplitOptions.RemoveEmptyEntries);

                            wanted_path = array[0] + path;

                            string nome = viewBagVariavel[i].UserID; //pega o nome do usuario que postou a resposta

                            <tr>
                                <td>
                                    @Html.Raw(mostra3)
                                    <br />
                                    <br />
                                    <b><i>Replied by:</i></b>
                                    @Html.Raw(nome)


                                    @if (System.IO.File.Exists(wanted_path))
                                    {
                                        <br /> <img src="~/Images/@user_pic" width="100" height="100" class="alignleft" /><br /><br /><br /><br />
                                    }
                                    else
                                    {
                                        <br /> <img src="~/Images/User_icon_BLACK-01.png" width="100" height="100" class="alignleft" /><br /><br /><br /><br />
                                    }

                                    <br />

                                    <div class="btn-group" role="group">
                                        <a class="btn btn-success text-white" asp-action="UpvoteReplies" asp-route-Id="@viewBagVariavel[i].ReplyId">
                                            <i class="fas fa-arrow-circle-up"></i>
                                        </a>
                                    </div>

                                    @viewBagVariavel[i].VoteGR

                                    <div class="btn-group" role="group">
                                        <a class="btn btn-danger text-white" asp-action="DownvoteReplies" asp-route-Id="@viewBagVariavel[i].ReplyId">
                                            <i class="fas fa-arrow-circle-down"></i>
                                        </a>
                                    </div>

                                    <br />

                                    @try
                                    {
                                        if (viewBagVariavel[i].UsersDownVoteR.Contains(Model.ApplicationUser.Name))
                                        {
                                            @Html.Raw("Your vote: Negative.")
                                        }
                                        else if (viewBagVariavel[i].UsersUpVoteR.Contains(Model.ApplicationUser.Name))
                                        {
                                            @Html.Raw("Your vote: Positive.")
                                        }
                                        else
                                        {
                                            @Html.Raw("You didn't vote yet.")
                                        }
                                    }
                                    catch
                                    {
                                        try
                                        {
                                            if (viewBagVariavel[i].UsersUpVoteR.Contains(Model.ApplicationUser.Name))
                                            {
                                                @Html.Raw("Your vote: Positive.")
                                            }
                                            else
                                            {
                                                @Html.Raw("You didn't vote yet.")
                                            }
                                        }
                                        catch
                                        {
                                            @Html.Raw("You didn't vote yet.")
                                        }
                                    }


                                </td>

                                @{
                                    if ((viewBagVariavel[i].UserID == Model.ApplicationUser.Name) || User.IsInRole(SD.ManagerUser))
                                    {
                                        <td>
                                            <partial name="_TableButtonsPartialReplies" model="ReplyID" />
                                        </td>
                                    }
                                    else
                                    {
                                        <td></td>
                                        <td></td>
                                    }
                                }

                            </tr>
                        }
                    }

                </table>

            }
        </div>

        <div class="alignright2">
            <a asp-action="Index" class="btn btn-success form-control">Back to questions list</a>
            <br><br />
        </div>

        <br><br />

    </div>
</form>
